- import std.random;
- import std.conv;
- int i = uniform(0, 5);
	- if(i==0)
		pre.language-d
			|void main() 
			|{
			|	import std.exception, std.stdio, std.process;
			|	auto result = ["whoami"].execute;
			|	enforce(result.status == 0);
			|	result.output.write;
			| }
	- if(i==1)
		pre.language-d
			|import std.algorithm: map;
			|auto result = [1, 2, 3].map!(a => a + 1);
			|assert(result.equal([2 ,3, 4]));
	- if(i==2)
		pre.language-d
			|//Example of an echo server 
			|import vibe.vibe;
			|void main()
			|{
			|	listenTCP(7, (conn) { conn.write(conn); });
			|	runApplication();
			|}
	- if(i==3)
		pre.language-d
			|import std.stdio;
			|void main() 
			|{ 
			|	writefln("Hello World!");
			|}
	- if(i==4)
		pre.language-d
			|//Writing a File
			|import std.stdio; 
			|import std.file;
			|  
			|void main() { 
			|   File file = File("test.txt", "w"); 
			|   file.writeln("hello");
			|   file.close(); 
			|}
	- if(i==5)
		pre.language-d
			|//Version (tag) and Version (level)
			|import std.stdio;  
			|void myFunction() { 
			|   version(1) writeln("version1"); 
			|   version(2) writeln("version2");     
			|}
			|  
			|void main() { 
			|   myFunction(); 
			|}
	- if(i==6)
		pre.language-d
			|import std.algorithm: sort;
			|auto result = [1, 3, 2].sort!"a > b";
			|assert(result.equal([3, 2, 1]));
	- if(i==7)
		pre.language-d
			|import std.algorithm: count, sort, uniq;
			|auto result = [1, 3, 2, 2, 3].sort().uniq.count;
			|assert(result == 3);
	- if(i==8)
		pre.language-d
			|import std.algorithm: map, sum;
			|import std.range: chunks;
			|auto result = [1, 2, 3, 4].chunks(2).map!(sum);
			|assert(result.equal([3, 7]));		
